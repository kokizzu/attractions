import{S as s,i as t,s as e,K as a,h as c,j as $,q as o,c as n,b as r,k as l,u as p,d as f,e as m,f as u,m as d,g as i,O as g,P as h,Q as x,t as w,o as S,p as b,r as j,v as y}from"./client.8835cd12.js";import{L as v}from"./label.d16e22dd.js";import{C}from"./copyable-code.6cab80ec.js";const E=s=>({}),O=s=>({}),k=s=>({}),q=s=>({});function I(s){let t;return{c(){t=j("Showcase")},l(s){t=y(s,"Showcase")},m(s,e){u(s,t,e)},d(s){s&&f(t)}}}function K(s){let t;return{c(){t=j("Source")},l(s){t=y(s,"Source")},m(s,e){u(s,t,e)},d(s){s&&f(t)}}}function L(s){let t;const e=s[0].source,c=a(e,s,s[1],O);return{c(){c&&c.c()},l(s){c&&c.l(s)},m(s,e){c&&c.m(s,e),t=!0},p(s,a){c&&c.p&&(!t||2&a)&&g(c,e,s,s[1],t?x(e,s[1],a,E):h(s[1]),O)},i(s){t||(w(c,s),t=!0)},o(s){S(c,s),t=!1},d(s){c&&c.d(s)}}}function N(s){let t,e,j,y,E,O,N,P;e=new v({props:{$$slots:{default:[I]},$$scope:{ctx:s}}});const Q=s[0].showcase,T=a(Q,s,s[1],q);return E=new v({props:{class:"code",$$slots:{default:[K]},$$scope:{ctx:s}}}),N=new C({props:{$$slots:{default:[L]},$$scope:{ctx:s}}}),{c(){t=c("section"),$(e.$$.fragment),j=o(),T&&T.c(),y=o(),$(E.$$.fragment),O=o(),$(N.$$.fragment),this.h()},l(s){t=n(s,"SECTION",{class:!0});var a=r(t);l(e.$$.fragment,a),j=p(a),T&&T.l(a),y=p(a),l(E.$$.fragment,a),O=p(a),l(N.$$.fragment,a),a.forEach(f),this.h()},h(){m(t,"class","showcase svelte-8pudd0")},m(s,a){u(s,t,a),d(e,t,null),i(t,j),T&&T.m(t,null),i(t,y),d(E,t,null),i(t,O),d(N,t,null),P=!0},p(s,[t]){const a={};2&t&&(a.$$scope={dirty:t,ctx:s}),e.$set(a),T&&T.p&&(!P||2&t)&&g(T,Q,s,s[1],P?x(Q,s[1],t,k):h(s[1]),q);const c={};2&t&&(c.$$scope={dirty:t,ctx:s}),E.$set(c);const $={};2&t&&($.$$scope={dirty:t,ctx:s}),N.$set($)},i(s){P||(w(e.$$.fragment,s),w(T,s),w(E.$$.fragment,s),w(N.$$.fragment,s),P=!0)},o(s){S(e.$$.fragment,s),S(T,s),S(E.$$.fragment,s),S(N.$$.fragment,s),P=!1},d(s){s&&f(t),b(e),T&&T.d(s),b(E),b(N)}}}function P(s,t,e){let{$$slots:a={},$$scope:c}=t;return s.$$set=s=>{"$$scope"in s&&e(1,c=s.$$scope)},[a,c]}class Q extends s{constructor(s){super(),t(this,s,P,N,e,{})}}export{Q as S};
