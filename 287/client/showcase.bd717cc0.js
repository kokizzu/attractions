import{S as s,i as t,s as e,K as a,h as $,j as c,q as o,c as n,b as r,k as l,u as f,d as p,e as m,f as u,m as d,g as i,O as g,P as h,Q as x,t as w,o as S,p as j,r as y,v as b}from"./client.941dfc86.js";import{L as v}from"./label.6082aa1d.js";import{C}from"./copyable-code.f43c1a27.js";const E=s=>({}),O=s=>({}),k=s=>({}),q=s=>({});function I(s){let t;return{c(){t=y("Showcase")},l(s){t=b(s,"Showcase")},m(s,e){u(s,t,e)},d(s){s&&p(t)}}}function K(s){let t;return{c(){t=y("Source")},l(s){t=b(s,"Source")},m(s,e){u(s,t,e)},d(s){s&&p(t)}}}function L(s){let t;const e=s[0].source,$=a(e,s,s[1],O);return{c(){$&&$.c()},l(s){$&&$.l(s)},m(s,e){$&&$.m(s,e),t=!0},p(s,a){$&&$.p&&(!t||2&a)&&g($,e,s,s[1],t?x(e,s[1],a,E):h(s[1]),O)},i(s){t||(w($,s),t=!0)},o(s){S($,s),t=!1},d(s){$&&$.d(s)}}}function N(s){let t,e,y,b,E,O,N,P;e=new v({props:{$$slots:{default:[I]},$$scope:{ctx:s}}});const Q=s[0].showcase,T=a(Q,s,s[1],q);return E=new v({props:{class:"code",$$slots:{default:[K]},$$scope:{ctx:s}}}),N=new C({props:{$$slots:{default:[L]},$$scope:{ctx:s}}}),{c(){t=$("section"),c(e.$$.fragment),y=o(),T&&T.c(),b=o(),c(E.$$.fragment),O=o(),c(N.$$.fragment),this.h()},l(s){t=n(s,"SECTION",{class:!0});var a=r(t);l(e.$$.fragment,a),y=f(a),T&&T.l(a),b=f(a),l(E.$$.fragment,a),O=f(a),l(N.$$.fragment,a),a.forEach(p),this.h()},h(){m(t,"class","showcase svelte-8pudd0")},m(s,a){u(s,t,a),d(e,t,null),i(t,y),T&&T.m(t,null),i(t,b),d(E,t,null),i(t,O),d(N,t,null),P=!0},p(s,[t]){const a={};2&t&&(a.$$scope={dirty:t,ctx:s}),e.$set(a),T&&T.p&&(!P||2&t)&&g(T,Q,s,s[1],P?x(Q,s[1],t,k):h(s[1]),q);const $={};2&t&&($.$$scope={dirty:t,ctx:s}),E.$set($);const c={};2&t&&(c.$$scope={dirty:t,ctx:s}),N.$set(c)},i(s){P||(w(e.$$.fragment,s),w(T,s),w(E.$$.fragment,s),w(N.$$.fragment,s),P=!0)},o(s){S(e.$$.fragment,s),S(T,s),S(E.$$.fragment,s),S(N.$$.fragment,s),P=!1},d(s){s&&p(t),j(e),T&&T.d(s),j(E),j(N)}}}function P(s,t,e){let{$$slots:a={},$$scope:$}=t;return s.$$set=s=>{"$$scope"in s&&e(1,$=s.$$scope)},[a,$]}class Q extends s{constructor(s){super(),t(this,s,P,N,e,{})}}export{Q as S};
